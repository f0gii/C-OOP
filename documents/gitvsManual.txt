
	Directorio de trabajo.
	 |
         +--> Area de ensayo (staging area).
               |
               +--> Repositorio local.	
	
  +---------------------------------------------------------------------------------------------------------------------+
  | git init  				= inicializa el repocitorio.							                  |								
  | git status -s 		 	= muestra los archivos y directorios en la carpeta del proyecto.		            |
  | git add filename 		 	= Agrega el archivo(filename) al area de ensayo (staging area).		      	|	
  | git add .			 	= Agrega todos los archivos al area de ensayo (staging area).		      	|
  | git commit -m "description"	= Agrega el archivo al repositorio local y agrega un comentario(description).	      |
  | git commit -am "description" 	= Agrega los archivos al area de ensayo y luego los agrega al repositorio local.    |
  | git log --oneline		 	= una lista con todas las copias (commit) que se han echo al repocitorio.	      |
  | git reset --hard filecode	 	= Regresa a la copia del codigo que se ingrese(filecode).			            |
  | git tag tagname -m "description"= Agrega un etiqueta(tag) para el control de verciones.      			      |
  | git push --tags			= Agrega las etiquetas al repositorio virtual de github.     			      |
  | git clone repositoryURL      	= clona los archivos en la carpeta del repositorio local.                           |
  | git branch branchname   	      = crea una rama y la nombras(branchname).                                           |
  | git branch 				= Muestra todas las ramas del repocitorio, el * marca en que rama estamos.          |
  | git checkout branchname     	= Nos movemos a la rama nombrada(branchname). 					            |
  | git merge branchname 		= Solo se puede desde el area de master y une mastar mas una rama(branchname).      |
  | git branch -d branchname        = borra la rama(branch) nombrada.
  +---------------------------------------------------------------------------------------------------------------------+



  Comandos linux que funcionan el git
  +---------------------------------------------------------------------------------------------------------------------+
  | pwd 				= verificar direccion actual.                                                   |
  | ls -l				= muestra los archivos de la direccion 						|
  | touch namefile 	      = crea un archivo 					      			|
  +---------------------------------------------------------------------------------------------------------------------+
 
  Comandos windows de consola 
  +---------------------------------------------------------------------------------------------------------------------+
  | cd .. 		  		= regresa una direccion hacia atras.
  | cd filename               = entra a la direccion nombrada (filename).
  | dir 				= muesta todas los archivos de la direccion actual.
  | mkdir 				= creas una direccion (carpeta).
  | copy > Sample.txt         = crea un nuevo archivo.
  | explorer filename  	      = ejecuta o abre el archivo.
  | move filename foldername  = mueve el arvhivo a la carpeta nombrada
  | ren oldname newname       = renombra un archivo o carpeta.(en vsCode genera otro archivo igual, elimina el ateriro)
  +---------------------------------------------------------------------------------------------------------------------+

  +---------------------------------------------+
  | ??	(red)	- No esta en seguimineto	|
  | A	(green)	- archivo en area de ensayo	|
  | M  	(red)	- Archivo modificado		|
  +---------------------------------------------+

  Comandos de git para agregar un repositorio git a GitHub
  +----------------------------------------------------------------------------------------------------------------------+
  | 1) git remote add origin repositoryURL << para agregar la direccion del repositorio virtual solo se necesita una vez | 
  | 2) git push -u origin master											 |
  +----------------------------------------------------------------------------------------------------------------------+
 
  Traer los cambios de github a nuestro git.
  +----------------------------------------------------------------------------------------------------------------------------+
  |  git branch --set-upstream-to=origin/master master << si no registra los cambios agregue este comando y repita git pull.   |	
  |  git pull					       						           		       |
  +----------------------------------------------------------------------------------------------------------------------------+


  U = unfollow file
  A = estos archivos an sido agregados 

  the source control = indica todos los cambios o tareas faltantes por guardar

